# using circleci docker image my personal trial

version: 2
jobs:
  build:
    docker:
      - image: node:11.10.1
      - image: circleci/postgres:11-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: diarybd
      - image: redis:latest

    working_directory: ~/circleci-node

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # - run: npm start
      # - run: npm run localTest
      # - run: npm install mocha-junit-reporter # just for CircleCI

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run: mkdir reports

        # Run mocha
      # - run:
      #     name: npm test
      #     command: ./node_modules/.bin/nyc ./node_modules/.bin/mocha --recursive --timeout=10000 --exit --reporter mocha-junit-reporter --reporter-options mochaFile=reports/mocha/test-results.xml
      #     when: always
# using orbs
# version: 2.1
# orbs:
#   node: circleci/node@5
#   postgres: circleci/postgres@1.1.0
#   win: circleci/windows@4.1.1

# jobs:
#   installingPackages:
#     executor:
#       name: win/default # executor type
#       size: medium

#     steps:
#       - checkout
#       - run: npm install
#       - run: node server.js

#   # test:
#   #   executor:
#   #     name: win/default # executor type
#   #     size: medium

#   #   steps:
#   #     - checkout
#   #     - run: npm install
#   #     - run: npm test

# workflows:
#   version: 2.1
#   test_coverage:
#     jobs:
#       - installingPackages
#       # - test

# version: 2
# jobs:
#   build:
#     docker:
#       - image: node:11.10.1
#       - image: circleci/postgres:11-alpine-ram
#         environment:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: example12
#       - image: redis:latest

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: yarn install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: yarn ci:test

#       - setup_remote_docker:
#           docker_layer_caching: true

#       - run:
#           name: Install Docker client
#           command: |
#             set -x
#             VER="18.06.3-ce"
#             curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
#             tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#             mv /tmp/docker/* /usr/bin
#       - run: yarn ci:docker
